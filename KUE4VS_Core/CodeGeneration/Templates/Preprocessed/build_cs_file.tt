<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#= this.file_header #>

using UnrealBuildTool;

public class <#= this.module_name #> : ModuleRules
{
	public <#= this.module_name #>(ReadOnlyTargetRules Target) : base(Target)
	{
		PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;

		bEnforceIWYU = <#= this.enforce_iwyu #>;
		bFasterWithoutUnity = <#= this.suppress_unity #>;

		PublicIncludePaths.AddRange(
			new string[] {
				"<#= this.module_name #>/Public"
				// ... add public include paths required here ...
			}
			);				
		
		PrivateIncludePaths.AddRange(
			new string[] {
				"<#= this.module_name #>/Private",
				// ... add other private include paths required here ...
			}
			);
		
		PublicDependencyModuleNames.AddRange(
			new string[]
			{
<# foreach (var mod in this.public_deps) { #>
				"<#= mod #>",
<# } #>
				// ... add other public dependencies that you statically link with here ...
			}
			);
				
		PrivateDependencyModuleNames.AddRange(
			new string[]
			{
<# foreach (var mod in this.private_deps) { #>
				"<#= mod #>",
<# } #>
				// ... add private dependencies that you statically link with here ...	
			}
			);
		
		DynamicallyLoadedModuleNames.AddRange(
			new string[]
			{
<# foreach (var mod in this.dynamic_deps) { #>
				"<#= mod #>",
<# } #>
				// ... add any modules that your module loads dynamically here ...
			}
			);

		PrivateIncludePathModuleNames.AddRange(
			new string[]
			{
<# foreach (var mod in this.dynamic_deps) { #>
				"<#= mod #>",
<# } #>
			}
			);
	}
}
